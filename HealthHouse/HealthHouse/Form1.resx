<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ucMainItem1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAuQAAAFzCAIAAAD5TYtUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDAAA
        CwwBP0AiyAAACVVJREFUeF7t3L9npHsfxvFTnH9hi2UII0w7TDVsFdaGVFOFVJEqpAqpQqqQKqQKqUKa
        kCosIdVUISyphiVMs4RhqmEZhmFPHr4cz2Ofc/ZHflxzz+tV3Fz13bx9i88f3wAAgokVACCaWAEAookV
        ACCaWAEAookVACCaWAEAookVACCaWAEAookVACDaH38y4z58+NDr9cr/BIDK8bIy8y4vLxcXF4fDYdkA
        UC1ipQr29/ffv38/mUzKBoAKESsVsbq6urW1VQYAVIhYqYjxeNxqtU5OTsoGgKoQK9Xx5cuXhYWFbrdb
        NgBUgliplJubm8de6ff7ZQPA7BMrVXN6etpsNr9+/Vo2AMw4sVJB29vbnU6nDACYcWKlgqbT6fLy8t7e
        XtkAMMvESjWNRqNGo3FxcVE2AMwssVJZnz9/rtVqd3d3ZQPAbBIrVXZ1dVWv1weDQdkAMIPESsUdHh6+
        e/fOJX4AZpdYqb719fWNjY0yAGDWiJXqm0wm7Xb76OiobACYKWJlLgwGg3q9fn19XTYAzA6xMi8+ffpU
        q9Xu7+/LBoAZIVbmyPn5eaPRGI1GZQPALBAr82V3d3dlZWU6nZYNAPHEynx5zJROp7Ozs1M2AMQTK3Nn
        NBo1m82zs7OyASCbWJlH/X6/Vqvd3t6WDQDBxMqc6na7j73y8PBQNgCkEivz6/j4uNVqjcfjsgEgkliZ
        a5ubm2tra2UAQCSxMtcmk8nS0tLBwUHZAJBHrMy74XC4uLj48ePHsgEgjFjhW6/Xe/v27eO3bABIIlb4
        j8vLy8XFxeFwWDYAxBArFPv7+0tLS5PJpGwAyCBW+Nvq6urW1lYZAJBBrPC38XjcarVOTk7KBoAAYoX/
        8vDwsLCw0O12ywaA1yZW+F83NzePvdLv98sGgFclVviO09PTZrM5Go3KBoDXI1b4vu3t7U6nUwYAvB6x
        wvdNp9Pl5eW9vb2yAeCViBX+r9Fo1Gg0Li4uygaA1yBW+Cf39/e1Wu3u7q5sAHhxYoV/cXV1Va/XB4NB
        2QDwssQK/+7w8LDdbrvED8CrECv8kPX19Y2NjTIA4AWJFX7IZDJpt9tHR0dlA8BLESv8qMFgUK/Xr6+v
        ywaAFyFW+Al3d3e1Wu3+/r5sAHh+YoWfc35+3mg0XOIH4MWIFX7a7u7uysrKdDotGwCek1jhpz1mSqfT
        2dnZKRsAnpNY4VeMRqNms3l2dlY2ADwbscIv6vf7CwsLt7e3ZQPA8xAr/Lput1ur1R4eHsoGgGcgVvgt
        x8fHrVZrPB6XDQBPTazwuzY3N9fW1soAgKcmVvhdk8lkaWnp4OCgbAB4UmKFJzAcDt+8efMnADwDscLT
        6PV6HlcAeA5iBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCI
        JlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhi
        BQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYA
        gGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGhiBQCIJlYAgGDfvv0F
        5WakbcsD5YMAAAAASUVORK5CYII=
</value>
  </data>
</root>